{"version":3,"sources":["webpack:///./src/components/typography.module.css","webpack:///./src/components/blog-post-preview-list.js","webpack:///./src/pages/index.js","webpack:///./src/components/blog-post-preview-list.module.css","webpack:///./src/components/blog-post-preview.module.css","webpack:///./src/components/blog-post-preview.js"],"names":["module","exports","BlogPostPreviewGrid","props","className","styles","root","title","headline","grid","nodes","map","node","key","id","isInList","browseMoreHref","browseMoreNav","to","defaultProps","query","IndexPage","data","errors","site","postNodes","posts","mapEdgesToNodes","filter","filterOutDocsWithoutSlugs","filterOutDocsPublishedInTheFuture","Error","description","keywords","hidden","BlogPostPreview","inList","inGrid","getBlogUrl","publishedAt","slug","current","leadMediaThumb","mainImage","asset","src","imageUrlFor","buildImageObj","width","height","Math","floor","auto","url","alt","text","cn","responsiveTitle3","_rawExcerpt","excerpt","blocks","date","format"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,OAAS,mCAAmC,OAAS,mCAAmC,OAAS,mCAAmC,MAAQ,kCAAkC,KAAO,iCAAiC,MAAQ,kCAAkC,MAAQ,kCAAkC,UAAY,sCAAsC,WAAa,uCAAuC,iBAAmB,6CAA6C,iBAAmB,6CAA6C,iBAAmB,6CAA6C,iBAAmB,+C,6KCKrnB,SAASC,EAAqBC,GAC5B,OACE,yBAAKC,UAAWC,IAAOC,MACpBH,EAAMI,OAAS,wBAAIH,UAAWC,IAAOG,UAAWL,EAAMI,OACvD,wBAAIH,UAAWC,IAAOI,MACnBN,EAAMO,OACLP,EAAMO,MAAMC,KAAI,SAAAC,GAAI,OAClB,wBAAIC,IAAKD,EAAKE,IACZ,kBAAC,IAAD,iBAAqBF,EAArB,CAA2BG,UAAQ,UAI1CZ,EAAMa,gBACL,yBAAKZ,UAAWC,IAAOY,eACrB,kBAAC,IAAD,CAAMC,GAAIf,EAAMa,gBAAhB,iBAOVd,EAAoBiB,aAAe,CACjCZ,MAAO,GACPG,MAAO,GACPM,eAAgB,IAGHd,Q,gDCpBFkB,EAAK,YAkGHC,UA7CG,SAAAlB,GAAU,IACnBmB,EAAgBnB,EAAhBmB,KAAMC,EAAUpB,EAAVoB,OAEb,GAAIA,EACF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAkBA,OAAQA,KAKhC,IAAMC,GAAQF,GAAQ,IAAIE,KACpBC,GAAaH,GAAQ,IAAII,MAC3BC,YAAgBL,EAAKI,OACpBE,OAAOC,KACPD,OAAOE,KACR,GAEJ,IAAKN,EACH,MAAM,IAAIO,MACR,iJAIJ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACExB,MAAOiB,EAAKjB,MACZyB,YAAaR,EAAKQ,YAClBC,SAAUT,EAAKS,WAEjB,kBAAC,IAAD,KACE,wBAAIC,QAAM,GAAV,cAAuBV,EAAKjB,OAC3BkB,GACC,kBAAC,EAAD,CACElB,MAAM,oBACNG,MAAOe,EACPT,eAAe,kB,qBCtG3BhB,EAAOC,QAAU,CAAC,KAAO,6CAA6C,SAAW,iDAAiD,KAAO,6CAA6C,cAAgB,wF,qBCAtMD,EAAOC,QAAU,CAAC,KAAO,wCAAwC,OAAS,gFAAgF,OAAS,gFAAgF,eAAiB,kDAAkD,KAAO,wCAAwC,MAAQ,yCAAyC,QAAU,2CAA2C,KAAO,0C,kCCDld,sHAyCekC,IA/Bf,SAA0BhC,GACxB,OACE,kBAAC,IAAD,CACEC,UAAWD,EAAMY,SAAWV,IAAO+B,OAAS/B,IAAOgC,OACnDnB,GAAIoB,YAAWnC,EAAMoC,YAAapC,EAAMqC,KAAKC,UAE7C,yBAAKrC,UAAWC,IAAOqC,gBACpBvC,EAAMwC,WAAaxC,EAAMwC,UAAUC,OAClC,yBACEC,IAAKC,YAAYC,YAAc5C,EAAMwC,YAClCK,MAAM,KACNC,OAAOC,KAAKC,MAAO,QACnBC,KAAK,UACLC,MACHC,IAAKnD,EAAMwC,UAAUW,OAI3B,yBAAKlD,UAAWC,IAAOkD,MACrB,wBAAInD,UAAWoD,YAAGC,mBAAkBpD,IAAOE,QAASJ,EAAMI,OACzDJ,EAAMuD,aACL,yBAAKtD,UAAWC,IAAOsD,SACrB,kBAAC,IAAD,CAAcC,OAAQzD,EAAMuD,eAGhC,yBAAKtD,UAAWC,IAAOwD,MAAOC,iBAAO3D,EAAMoC,YAAa","file":"component---src-pages-index-js-2bcd4a5ca9e32520a305.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title1\":\"typography-module--title1--1Tbmt\",\"title2\":\"typography-module--title2--1dRzz\",\"title3\":\"typography-module--title3--SXwAK\",\"large\":\"typography-module--large--3gzPR\",\"base\":\"typography-module--base--3b7o6\",\"small\":\"typography-module--small--wmXt7\",\"micro\":\"typography-module--micro--1FA3w\",\"paragraph\":\"typography-module--paragraph--IWJKu\",\"blockQuote\":\"typography-module--blockQuote--3DNXC\",\"responsiveTitle1\":\"typography-module--responsiveTitle1--1tLTC\",\"responsiveTitle2\":\"typography-module--responsiveTitle2--1Uzed\",\"responsiveTitle3\":\"typography-module--responsiveTitle3--3gljT\",\"responsiveTitle4\":\"typography-module--responsiveTitle4--ekdC4\"};","import {Link} from 'gatsby'\nimport React from 'react'\nimport BlogPostPreview from './blog-post-preview'\n\nimport styles from './blog-post-preview-list.module.css'\n\nfunction BlogPostPreviewGrid (props) {\n  return (\n    <div className={styles.root}>\n      {props.title && <h2 className={styles.headline}>{props.title}</h2>}\n      <ul className={styles.grid}>\n        {props.nodes &&\n          props.nodes.map(node => (\n            <li key={node.id}>\n              <BlogPostPreview {...node} isInList />\n            </li>\n          ))}\n      </ul>\n      {props.browseMoreHref && (\n        <div className={styles.browseMoreNav}>\n          <Link to={props.browseMoreHref}>Browse more</Link>\n        </div>\n      )}\n    </div>\n  )\n}\n\nBlogPostPreviewGrid.defaultProps = {\n  title: '',\n  nodes: [],\n  browseMoreHref: ''\n}\n\nexport default BlogPostPreviewGrid\n","import React from 'react'\nimport {graphql} from 'gatsby'\nimport {\n  mapEdgesToNodes,\n  filterOutDocsWithoutSlugs,\n  filterOutDocsPublishedInTheFuture\n} from '../lib/helpers'\nimport BlogPostPreviewList from '../components/blog-post-preview-list'\nimport Container from '../components/container'\nimport GraphQLErrorList from '../components/graphql-error-list'\nimport SEO from '../components/seo'\nimport Layout from '../containers/layout'\n\nexport const query = graphql`\n  fragment SanityImage on SanityMainImage {\n    crop {\n      _key\n      _type\n      top\n      bottom\n      left\n      right\n    }\n    hotspot {\n      _key\n      _type\n      x\n      y\n      height\n      width\n    }\n    asset {\n      _id\n    }\n  }\n\n  query IndexPageQuery {\n    site: sanitySiteSettings(_id: { regex: \"/(drafts.|)siteSettings/\" }) {\n      title\n      description\n      keywords\n    }\n    posts: allSanityPost(\n      limit: 6\n      sort: { fields: [publishedAt], order: DESC }\n      filter: { slug: { current: { ne: null } }, publishedAt: { ne: null } }\n    ) {\n      edges {\n        node {\n          id\n          publishedAt\n          mainImage {\n            ...SanityImage\n            alt\n          }\n          title\n          _rawExcerpt\n          slug {\n            current\n          }\n        }\n      }\n    }\n  }\n`\n\nconst IndexPage = props => {\n  const {data, errors} = props\n\n  if (errors) {\n    return (\n      <Layout>\n        <GraphQLErrorList errors={errors} />\n      </Layout>\n    )\n  }\n\n  const site = (data || {}).site\n  const postNodes = (data || {}).posts\n    ? mapEdgesToNodes(data.posts)\n      .filter(filterOutDocsWithoutSlugs)\n      .filter(filterOutDocsPublishedInTheFuture)\n    : []\n\n  if (!site) {\n    throw new Error(\n      'Missing \"Site settings\". Open the studio at http://localhost:3333 and add some content to \"Site settings\" and restart the development server.'\n    )\n  }\n\n  return (\n    <Layout>\n      <SEO\n        title={site.title}\n        description={site.description}\n        keywords={site.keywords}\n      />\n      <Container>\n        <h1 hidden>Welcome to {site.title}</h1>\n        {postNodes && (\n          <BlogPostPreviewList\n            title='Latest blog posts'\n            nodes={postNodes}\n            browseMoreHref='/archive/'\n          />\n        )}\n      </Container>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"blog-post-preview-list-module--root--2LgdR\",\"headline\":\"blog-post-preview-list-module--headline--3j8kB\",\"grid\":\"blog-post-preview-list-module--grid--S1onS\",\"browseMoreNav\":\"blog-post-preview-list-module--browseMoreNav--3bwJw typography-module--small--wmXt7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"blog-post-preview-module--root--3atzz\",\"inList\":\"blog-post-preview-module--inList--3aHje blog-post-preview-module--root--3atzz\",\"inGrid\":\"blog-post-preview-module--inGrid--2H2i0 blog-post-preview-module--root--3atzz\",\"leadMediaThumb\":\"blog-post-preview-module--leadMediaThumb--10e8T\",\"text\":\"blog-post-preview-module--text--283BT\",\"title\":\"blog-post-preview-module--title--35-HT\",\"excerpt\":\"blog-post-preview-module--excerpt--2MJ55\",\"date\":\"blog-post-preview-module--date--1QZQ0\"};","import {format} from 'date-fns'\nimport {Link} from 'gatsby'\nimport React from 'react'\nimport {buildImageObj, cn, getBlogUrl} from '../lib/helpers'\nimport {imageUrlFor} from '../lib/image-url'\nimport PortableText from './portableText'\n\nimport styles from './blog-post-preview.module.css'\nimport {responsiveTitle3} from './typography.module.css'\n\nfunction BlogPostPreview (props) {\n  return (\n    <Link\n      className={props.isInList ? styles.inList : styles.inGrid}\n      to={getBlogUrl(props.publishedAt, props.slug.current)}\n    >\n      <div className={styles.leadMediaThumb}>\n        {props.mainImage && props.mainImage.asset && (\n          <img\n            src={imageUrlFor(buildImageObj(props.mainImage))\n              .width(600)\n              .height(Math.floor((9 / 16) * 600))\n              .auto('format')\n              .url()}\n            alt={props.mainImage.alt}\n          />\n        )}\n      </div>\n      <div className={styles.text}>\n        <h3 className={cn(responsiveTitle3, styles.title)}>{props.title}</h3>\n        {props._rawExcerpt && (\n          <div className={styles.excerpt}>\n            <PortableText blocks={props._rawExcerpt} />\n          </div>\n        )}\n        <div className={styles.date}>{format(props.publishedAt, 'MMMM Do, YYYY')}</div>\n      </div>\n    </Link>\n  )\n}\n\nexport default BlogPostPreview\n"],"sourceRoot":""}